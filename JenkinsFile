pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://51.20.66.162:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
stage('Build and Push Docker Image') {
  environment {
    DOCKER_IMAGE = "srinathth/t1:${BUILD_NUMBER}"  // Update to new repository
    REGISTRY_CREDENTIALS = credentials('docker-cred')  // Ensure credentials match the new repository
  }
  steps {
    script {
      sh 'docker build -t ${DOCKER_IMAGE} .'
      def dockerImage = docker.image("${DOCKER_IMAGE}")
      docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
        dockerImage.push()  // Push to the new Docker repository
      }
    }
  }
}

  }
}
